[tool.poetry]
name = "datagen"
version = "0.3.0"
description = "An online service for generating CSV files with fake(dummy) data"
authors = ["Ivan Omelchenko"]

[tool.poetry.dependencies]
python = "3.10.5"
Django = "~4.0.4"
factory-boy = "~3.2.1"
celery = "~5.2.6"
gunicorn = "^20.1.0"
dj-database-url = "^0.5.0"
psycopg2 = "^2.9.3"
boto3 = "^1.22.9"
django-storages = "^1.12.3"
django-cleanup = "^6.0.0"
django-bootstrap5 = "^21.3"
coverage = {extras = ["toml"], version = "^6.4"}

[tool.poetry.dev-dependencies]
ipython = "^8.3.0"
python-dotenv = "^0.20.0"
black = "^22.3.0"
tblib = "^1.7.0"
django-coverage-plugin = "^2.0.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
  \.toml
  |\.sh
  |\.git
  |\.ini
  |Dockerfile
  |Jenkinfile
)/
'''

[tool.coverage.run]
command_line = "manage.py test datagen --settings=config.settings.test --shuffle --noinput --parallel"
branch = true
parallel = true
concurrency = ["multiprocessing"]
omit = [
  "*/__init__.py",
  "*/test*.py",
  "*/migrations/*",
  "*/urls.py",
  "*/admin.py",
  "*/apps.py",
  "datagen/config/*",
  "datagen/staticfiles/*",
  "datagen/media/*"
]
source = ["datagen"]
data_file = ".coverage/data/coverage"
plugins = ["django_coverage_plugin"]

[tool.coverage.combine]
append = true

[tool.coverage.xml]
output = ".coverage/coverage.xml"

[tool.coverage.html]
directory = ".coverage/html"
